{"version":3,"sources":["components/Navigation/Navigation.module.scss","components/Button/Button.module.scss","components/Arrow/index.tsx","components/Button/index.tsx","pages/HigherLower/index.tsx","pages/TrueFalse/index.tsx","pages/Home/index.tsx","components/Navigation/index.tsx","App.tsx","serviceWorker.js","index.tsx","components/Arrow/Arrow.module.scss","pages/HigherLower/HigherLower.module.scss","pages/TrueFalse/TrueFalse.module.scss"],"names":["module","exports","Arrow","direction","text","disabled","className","classes","arrow","icon","join","Button","show","invisible","children","onClick","props","undefined","type","invis","HigherLower","useState","setDirection","setDisabled","updateDirection","button","App","bottom","reset","TrueFalse","answer","setAnswer","updateAnswer","data","Home","Navigation","toggleNav","toggle","nav","navItems","label","url","map","item","key","to","navigationButton","active","location","useLocation","setToggle","useCallback","prevState","useEffect","path","component","Boolean","window","hostname","match","ReactDOM","render","basename","process","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3bd2993.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__2AsUs\",\"navigationButton\":\"Navigation_navigationButton__Wmxmk\",\"active\":\"Navigation_active__3kWJm\",\"navItems\":\"Navigation_navItems__nqsZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"invis\":\"Button_invis__6jefr\"};","import React from 'react';\nimport classes from './Arrow.module.scss';\n\n\ntype Arrow = {\n  direction: string,\n  text?: string,\n  disabled: boolean,\n}\n\nconst Arrow = ({direction, text, disabled} : Arrow) => {\n  \n  return (\n    <div>\n      <div className={classes.arrow}>\n        <span className={[classes.icon, classes[direction], !disabled ? classes.disabled : null].join(' ')}>&#8593;</span></div>\n      {text && (\n        <p className={classes.text}>{text}</p>\n      )}\n    </div>\n  )\n}\n\nexport default Arrow;\n","import React from 'react';\nimport classes from './Button.module.scss';\n\ntype Button = {\n  show?: boolean,\n  invisible?: boolean,\n  children: React.ReactNode,\n  className?: string,\n  onClick: () => void\n}\nconst Button = ({ show, invisible, children, onClick, className, ...props} : Button) => {\n  if(!show && show !== undefined) {\n    return null;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={[className, invisible ? classes.invis : null].join(' ')}\n      onClick={onClick}\n      {...props}\n    >\n      {children}\n    </button>\n  )\n\n}\n\nexport default Button;\n","import React, {useState, Fragment} from 'react';\nimport Arrow from '../../components/Arrow';\nimport Button from '../../components/Button';\nimport classes from './HigherLower.module.scss';\n\nconst HigherLower = () => {\n  const [direction, setDirection] = useState('up');\n  const [disabled, setDisabled] = useState(false);\n\n  const updateDirection = (direction: string) => {\n    setDirection(direction);\n    setDisabled(true);\n  }\n\n  const resetDirection = () => {\n    setDisabled(false);\n  }\n\n  return (\n    <Fragment>\n      <Button\n        show={!disabled}\n        invisible\n        className={classes.button}\n        onClick={() => updateDirection('up')}\n      >\n        Up\n      </Button>\n      <div className={classes.App}>\n        <Arrow direction={direction} disabled={disabled} text={disabled ? undefined : 'Please Choose'}/>\n      </div>\n      <Button\n        show={!disabled}\n        onClick={() => updateDirection('down')}\n        invisible\n        className={[classes.button, classes.bottom].join(' ')}\n      >\n        Down\n      </Button>\n      <Button\n        show={disabled}\n        invisible\n        onClick={() => resetDirection()}\n        className={classes.reset}\n      >\n        reset\n      </Button>\n    </Fragment>\n  );\n}\n\nexport default HigherLower;\n","import React, { useState, Fragment } from 'react';\nimport Button from '../../components/Button';\nimport classes from './TrueFalse.module.scss';\n\nconst TrueFalse = () => {\n  const [answer, setAnswer] = useState('');\n  const [disabled, setDisabled] = useState(false);\n\n  const resetBoolean = () => {\n    setAnswer('');\n    setDisabled(false);\n  }\n\n  const updateAnswer = (data: string) => {\n    setDisabled(true);\n    setAnswer(data);\n  }\n\n  return (\n    <Fragment>\n      <Button\n        show={!disabled}\n        className={classes.button}\n        onClick={() => updateAnswer('True')}\n      >\n        True\n      </Button>\n      <div className={classes.App}>\n        <p className={classes.answer}>{answer}</p>\n      </div>\n      <Button\n        show={!disabled}\n        onClick={() => updateAnswer('False')}\n        className={classes.button}\n      >\n        False\n      </Button>\n      <Button\n        show={disabled}\n        invisible\n        onClick={() => resetBoolean()}\n        className={classes.reset}\n      >\n        reset\n      </Button>\n    </Fragment>\n  );\n}\n\nexport default TrueFalse;\n","import React from 'react';\n\nconst Home = () => (\n  <div>\n    Welcome\n  </div>\n)\n\nexport default Home;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Button from '../Button';\nimport classes from './Navigation.module.scss';\n\ntype Navigation = {\n  toggleNav: () => void,\n  toggle: boolean,\n}\n\nconst Navigation = ({toggleNav, toggle}: Navigation) => {\n\n  const navItems = [\n    {\n      label: 'Home',\n      url: '/',\n    },\n    {\n      label: 'Higher / Lower',\n      url: '/higher-lower'\n    },\n    {\n      label: 'True / False',\n      url: '/true-false'\n    }\n  ];\n\n  return (\n    <div className={classes.nav}>\n      <nav className={toggle ? 'active' : undefined}>\n        <ul className={classes.navItems}>\n          {navItems.map(item => (\n            <li key={item.label}>\n              <Link to={item.url}>\n                {item.label}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n      <Button\n        className={[classes.navigationButton, toggle ? classes.active : null].join(' ')}\n        onClick={() => toggleNav()}\n      >\n        <span></span>\n        <span></span>\n        <span></span>\n      </Button>\n    </div>\n  )\n}\n\nexport default Navigation;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HigherLower from './pages/HigherLower';\nimport TrueFalse from './pages/TrueFalse';\nimport Home from './pages/Home';\nimport Navigation from './components/Navigation';\n\nfunction App() {\n  const location = useLocation()\n\n  const [toggle, setToggle] = useState(false);\n\n  const toggleNav = useCallback(() => {\n    setToggle(prevState => !prevState);\n  }, [setToggle])\n\n  useEffect(\n    () => {\n      toggleNav();\n    },\n    [location, toggleNav]\n  )\n\n\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/higher-lower\" component={HigherLower} />\n        <Route path=\"/true-false\" component={TrueFalse} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n      <Navigation toggleNav={toggleNav} toggle={toggle} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"Arrow_arrow__3TM91\",\"icon\":\"Arrow_icon__1ZcJf\",\"disabled\":\"Arrow_disabled__3xaFn\",\"up\":\"Arrow_up__fXLqB\",\"down\":\"Arrow_down__3Qfun\",\"text\":\"Arrow_text__1TMb0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"HigherLower_App__2bub2\",\"button\":\"HigherLower_button__1U5WW\",\"bottom\":\"HigherLower_bottom__3Mbl8\",\"reset\":\"HigherLower_reset__dBGhp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"TrueFalse_App__1piuC\",\"answer\":\"TrueFalse_answer__2iB5Z\",\"button\":\"TrueFalse_button__3Db5Q\",\"reset\":\"TrueFalse_reset__136PL\"};"],"sourceRoot":""}